// Code generated by ent, DO NOT EDIT.

package storebalancechangedetail

const (
	// Label holds the string label denoting the storebalancechangedetail type in the database.
	Label = "store_balance_change_detail"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldAccountID holds the string denoting the account_id field in the database.
	FieldAccountID = "account_id"
	// FieldStoreCode holds the string denoting the store_code field in the database.
	FieldStoreCode = "store_code"
	// FieldType holds the string denoting the type field in the database.
	FieldType = "type"
	// FieldInBatchNo holds the string denoting the in_batch_no field in the database.
	FieldInBatchNo = "in_batch_no"
	// FieldThirdPayType holds the string denoting the third_pay_type field in the database.
	FieldThirdPayType = "third_pay_type"
	// FieldThirdPayOrgan holds the string denoting the third_pay_organ field in the database.
	FieldThirdPayOrgan = "third_pay_organ"
	// FieldThirdPayNo holds the string denoting the third_pay_no field in the database.
	FieldThirdPayNo = "third_pay_no"
	// FieldBcBindAccID holds the string denoting the bc_bind_acc_id field in the database.
	FieldBcBindAccID = "bc_bind_acc_id"
	// FieldCashAccountNo holds the string denoting the cash_account_no field in the database.
	FieldCashAccountNo = "cash_account_no"
	// FieldCashPrincipal holds the string denoting the cash_principal field in the database.
	FieldCashPrincipal = "cash_principal"
	// FieldCashBank holds the string denoting the cash_bank field in the database.
	FieldCashBank = "cash_bank"
	// FieldTransactionNo holds the string denoting the transaction_no field in the database.
	FieldTransactionNo = "transaction_no"
	// FieldTransactionAt holds the string denoting the transaction_at field in the database.
	FieldTransactionAt = "transaction_at"
	// FieldBeforeFee holds the string denoting the before_fee field in the database.
	FieldBeforeFee = "before_fee"
	// FieldChangeFee holds the string denoting the change_fee field in the database.
	FieldChangeFee = "change_fee"
	// FieldAfterFee holds the string denoting the after_fee field in the database.
	FieldAfterFee = "after_fee"
	// FieldOperatorNo holds the string denoting the operator_no field in the database.
	FieldOperatorNo = "operator_no"
	// FieldFlowNo holds the string denoting the flow_no field in the database.
	FieldFlowNo = "flow_no"
	// FieldCheckState holds the string denoting the check_state field in the database.
	FieldCheckState = "check_state"
	// FieldCheckAt holds the string denoting the check_at field in the database.
	FieldCheckAt = "check_at"
	// FieldIsDeleted holds the string denoting the is_deleted field in the database.
	FieldIsDeleted = "is_deleted"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// Table holds the table name of the storebalancechangedetail in the database.
	Table = "store_balance_change_details"
)

// Columns holds all SQL columns for storebalancechangedetail fields.
var Columns = []string{
	FieldID,
	FieldAccountID,
	FieldStoreCode,
	FieldType,
	FieldInBatchNo,
	FieldThirdPayType,
	FieldThirdPayOrgan,
	FieldThirdPayNo,
	FieldBcBindAccID,
	FieldCashAccountNo,
	FieldCashPrincipal,
	FieldCashBank,
	FieldTransactionNo,
	FieldTransactionAt,
	FieldBeforeFee,
	FieldChangeFee,
	FieldAfterFee,
	FieldOperatorNo,
	FieldFlowNo,
	FieldCheckState,
	FieldCheckAt,
	FieldIsDeleted,
	FieldUpdatedAt,
	FieldCreatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
